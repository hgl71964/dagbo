BUILD:

as of hiBench version 29224b9c

build with java 8: sudo apt install openjdk-8-jdk

maven version: 3.2.5

apache spark version 2.4.5

apacha hadoop version 2.7.7

ENV VARIABLES(change accordingly):

export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64  # use jvm 8 to work with hiBench
export M2_HOME=/local/scratch/opt/apache-maven-3.2.5
export MAVEN_HOME=/local/scratch/opt/apache-maven-3.2.5
export PATH=${M2_HOME}/bin:${PATH}

# spark & hadoop
export HADOOP_CONF_DIR=/local/scratch/opt/hadoop-2.7.7/etc/hadoop
export HADOOP_HOME=/local/scratch/opt/hadoop-2.7.7
export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
export SPARK_HOME=/local/scratch/opt/spark-2.4.5-bin-hadoop2.7
export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin
export PYSPARK_PYTHON=/usr/bin/python3.7


CONFIG DIR:

1. {hadoop home}/etc/hadoop
        - core-site.xml, yarn-site.xml, hdfs-site.xml
2. {hibench home}/conf

NOTE:

1. when run with YARN, don't have to start-master.sh/start-slave.sh by ourselves
        only need to spark-submit with --master yarn

FAILUER:

Spark Bench:

GENERALLY, rebuild Hibench & restart all services

1. fail to launch because container run beyond virtual memory limit,

it could be a problem for java 8
this is found from log -> {hadoop home}/logs/yarn-gh512-resourcemanager

solutions:
        we have the minimum RAM for a Container (yarn.scheduler.minimum-allocation-mb) = 2 GB
        this is configurable in {hadoop home}/etc/hadoop/mapred-site.xml

        I simply set executor memory = 6g (2 executors) solve the problem


